{"version":3,"sources":["assets/img/Logo.png","assets/img/backgroundImage2.jpg","components/Grid/index.js","pages/Landing/Landing.js","components/Forms/index.js","utils/API.js","Auth.js","pages/SignIn/SignIn.js","pages/SignUp/SignUp.js","components/PatientList/index.js","components/PatientHandler/index.js","pages/Patients/Patients.js","utils/CustomHooks.js","utils/PatientContext.js","components/GeneralInfo/index.js","components/HealthCard/index.js","components/Conditions/index.js","components/Medications/index.js","components/NewContact/index.js","components/Contacts/index.js","pages/EHR/EHR.js","pages/Contacts/Contacts.js","components/Navbar/index.js","ProtectedRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","_ref","classes","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","Collapse","_ref4","navState","id","Landing","style","background","Grid_Container","Grid_Row","Grid_Col","class","logo","src","require","alt","react_router_dom","to","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","float","Input","props","Object","assign","TextArea","Button","LoggerBtn","btnType","type","API","fetchPatient","axios","get","fetchPatients","email","addPatient","data","post","removePatient","delete","updateEHR","patch","getUser","then","register","credentials","login","getConditionNames","search","fetchCondition","process","getMedNames","fetchMeds","src_Auth","Auth","classCallCheck","this","authenticated","cb","SignIn","history","useHistory","_useState","useState","_useState2","slicedToArray","setCredentials","onInputChange","e","_e$target","target","name","value","objectSpread","defineProperty","text","onSubmit","preventDefault","reset","status","push","console","log","catch","err","onChange","placeholder","color","textShadow","SignUp","statusText","PatientList","patient","context","removeState","confirmRemoval","remove","index","patientData","healthData","_id","firstName","nickname","removable","onClick","bind","textDecoration","toggleBtn","pathname","state","patientId","border","margin","backgroundColor","PatientHandler","toggleRemoveState","confirmed","cancel","Patients","setContext","patients","setPatients","_useState3","_useState4","setRemoveState","_useState5","_useState6","isConfirmed","useEffect","getPatients","asyncToGenerator","regenerator_default","mark","_callee","_yield$API$getUser","wrap","_context","prev","next","sent","user","stop","apply","arguments","_callee2","_context2","_x","togglePatientAsRemovable","clone","i","key","forEach","item","useForceUpdate","setValue","createContext","GeneralInfo","editState","toggleState","formSubmit","input","lastName","addressOne","addressTwo","city","zip","country","phone","updtBtn","fieldText","fontStyle","fontWeight","padding","borderBottom","transition","HealthCard","bloodType","gender","getAge","DOB","today","Date","birthDate","month","getMonth","age","getFullYear","isNaN","getDate","dob","selected","insurance","insNumber","rxBin","rxPcn","allergies","immunizations","notes","Conditions","areaTarget","renderSuggestions","toggleDescState","editDescState","getRowHeight","length","renderEditConditions","conditions","_this","sort","b","createdAt","condition","edit","littleEditBtn","description","rows","textarea","removeBtn","addBtn","autoComplete","resize","marginTop","focus","Medications","addDoses","otherDosage","doseChoices","littlePointBtn","onBlur","doses","includes","defaultValue","dose","renderDoses","meds","med","medication","dosage","renderEditMeds","NewContact","cancelBtn","saveBtn","Contacts","newContact","toggleNew","newTarget","formatPhoneNumberLink","number","replace","contacts","_this2","contact","office","primaryPhone","primaryExt","secondaryPhone","secondaryExt","fax","website","display","editBtn","href","rel","renderContacts","nextContact","getNewContact","EHR","_React$createElement","location","_useContext","useContext","PatientContext","setPatient","generalInfo","setGeneralInfo","healthInfo","setHealthInfo","_useState7","_useState8","setConditions","_useState9","_useState10","setMeds","_useState11","_useState12","setContacts","_useState13","_useState14","medInput","setMedInput","_useState15","_useState16","setNewContact","_useState17","_useState18","addContact","setAddContact","_useState19","_useState20","editGenState","setGenState","_useState21","_useState22","editHealthState","setHealthState","_useState23","_useState24","editConditState","setConditState","_useState25","_useState26","editMedsState","setMedsState","_useState27","_useState28","descEditState","setDescEditState","_useState29","_useState30","conditSuggestions","setConditSuggestions","_useState31","_useState32","medSuggestions","setMedSuggestions","_useState33","_useState34","setDoses","_useState35","_useState36","query","setQuery","forceUpdate","hasConditions","useRef","hasMeds","hasContacts","isInitialMount","current","getPatient","updateDB","_yield$API$fetchPatie","newPatient","healthConditions","medications","setParity","_yield$API$addPatient","parity","setNameInNavbar","onConditInputChange","_callee3","items","suggestions","regex","_context3","RegExp","filter","x","test","timeOutId","setTimeout","clearTimeout","onMedInputChange","_ref5","_callee4","_e$target4","_context4","slice","t0","abrupt","_x2","addCondition","_ref6","_callee5","_text$split","_text$split2","_yield$API$fetchCondi","newCondition","_context5","shortdef","capitalizeWord","now","toConsumableArray","_x3","word","char","toUpperCase","_ref7","_callee6","_yield$API$getConditi","_context6","_x4","_ref8","_callee7","_yield$API$getMedName","_context7","displayTermsList","term","_x5","selectSuggestedCondit","_ref9","_callee8","_value$split","_value$split2","_yield$API$fetchCondi2","_context8","_x6","selectSuggestedMed","_ref10","_callee9","_yield$API$fetchMeds","_doses","_context9","drugGroup","conceptGroup","conceptProperties","synonym","_x7","_ref11","_callee10","_yield$API$fetchMeds2","_doses2","_context10","_x8","_e$target2","arr","splice","newDescription","suggestion","newMed","_e$target5","_i","_Object$keys","keys","hasOwnProperty","_e$target3","list","navBar","navLinks","showNavLinks","useLocation","logout","readOnlyError","data-toggle","data-target","Grid_Collapse","isAuthenticated","ProtectedRoute","Component","component","rest","objectWithoutProperties","react_router","render","from","App","Provider","setPatientContext","path","exact","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","App_App","document","getElementById","URL","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cfa6c534.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.76d8cd68.png\";","module.exports = __webpack_public_path__ + \"static/media/backgroundImage2.f82817c2.jpg\";","import React from 'react'\n\n        \nexport const Container = ({ classes, children }) => <div className={`container ${classes}`}>{children}</div>\n\nexport const Row = ({ classes, children }) => <div className={`row ${classes}`}>{children}</div>\n\nexport const Col = ({ size, classes, children }) => {\n    return ( <div \n        className={size.split(' ').map( size => `col-${size}`).join(' ')\n        +\" \"+ classes}>{children}</div>\n    )\n}\n\nexport const Collapse = ({ navState, children, id }) => { \n    const classes = navState ? 'navbar-collapse collapse show' : 'navbar-collapse collapse';\n\n     return <div className={classes} id={id}>{children}</div>\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from '../../components/Grid';\n\nexport default function Landing() {\n\n    return (\n        <div\n            style={background}\n        >\n            <Container>\n                <Row>\n                    <Col size={'md-8'} classes={'offset-md-2'}>\n                        <div class=\"jumbotron mt-5\">\n                                 <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                            <h1 className=\"display-4\"><em>My</em> EHR</h1>\n                            <p className=\"lead\">All the medical records you need in one, simple place.</p>\n                            <hr className=\"my-4\" />\n                       \n                            <Link to=\"/signup\" className=\"btn btn-primary btn-lg\">Get Started</Link>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst background = {\n    backgroundImage: \"url(\" + require(\"../../assets/img/backgroundImage2.jpg\") + \")\",\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\nlogo = {\n    width: \"60px\",\n    height: \"auto\",\n    float: 'right'\n}","import React from 'react'\n\n\n\nexport function Input(props) {\n    return (\n        <input className=\"form-control\" {...props} />\n    );\n  }\n  \nexport function TextArea(props) {\n    return (\n        <textarea className=\"form-control\" {...props} />\n    );\n  }\n\nexport function Button(props) {\n    return (\n        <button {...props} >\n          {props.children}\n        </button>\n    );\n  }\n  export function LoggerBtn({ btnType }) { \n    \n      return (\n        <Button className={'btn btn-primary btn-lg btn-block'} \n        type=\"submit\">\n          {btnType}\n        </Button>\n      )\n  }\n","import axios from \"axios\";\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nexport default {\n    fetchPatient: id => axios.get(`/api/patients/${id}`),\n\n    fetchPatients: email => axios.get(\"/api/patients/load\", email),\n\n    addPatient: data => axios.post(\"/api/patients/add\", data),\n\n    removePatient: id => axios.delete(`/api/patients/${id}`),\n\n    updateEHR: (id, data) => axios.patch(`/api/patients/${id}`, data),\n\n    getUser: () => axios.get('/api/users').then(data => data),\n\n    register: credentials =>  axios.post('api/users/register', credentials),\n  \n    login: credentials => axios.post('/api/users/login', credentials),\n\n/*\n    External APIs\n*/ \n    getConditionNames: search => axios.get(`https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=${search}&sf=primary_name,consumer_name&df=primary_name,consumer_name,info_link_data`),\n    \n    fetchCondition: search => axios.get(`https://www.dictionaryapi.com/api/v3/references/medical/json/${search}?key=${apiKey}`),\n\n    getMedNames: () => axios.get('https://rxnav.nlm.nih.gov/REST/displaynames'),\n\n    fetchMeds: search => axios.get(`https://rxnav.nlm.nih.gov/REST/drugs.json?name=${search}`)\n}","\nclass Auth {\n\n   constructor() {\n       this.authenticated = false;\n   }\n    login(cb) {\n        this.authenticated = true\n        cb()\n    }\n    logout(cb) {\n        this.authenticated = false\n        cb()\n    }\n    isAuthenticated() {\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { LoggerBtn, Input } from '../../components/Forms';\nimport API from '../../utils/API';\nimport Auth from '../../Auth'\n\nexport default function SignIn() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n\n        onInputChange = e => {\n            const { name, value } = e.target;\n            setCredentials({ ...credentials, [name]: value })\n        },\n\n        authorize = () => {\n            Auth.login(() => {\n                history.push(\"/patients\")\n            })\n        },\n\n        handleSubmit = e => {\n            e.preventDefault();\n            e.target.reset();\n\n            API.login(credentials)\n                .then(({ data }) => {\n                    if (data.status === 'success') {\n                        authorize()\n                    } else {\n                        console.log('Login failed.  Please try again.')\n                    }\n                }).catch(err => err)\n        }\n\n    return (\n        <div\n            style={background}\n        >\n\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={'md-12'} classes='box-shadow sign' >\n                    <Row>\n                        <div className={'mt-5'}>\n                            <h5 style={text}>\n                                <img style={logo} src={require('../../assets/img/Logo.png')} alt={'Logo'} />\n                                Log-in to your account\n                            </h5>\n                        </div>\n                    </Row>\n                    <Row >\n                        <form onSubmit={handleSubmit} className={'card-body'}>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input onChange={onInputChange}\n                                    name=\"email\" type=\"email\" placeholder=\"E-mail address\" />\n                            </div>\n                            <div className={'form-group usr-inpt'}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input onChange={onInputChange}\n                                    name=\"password\" type=\"password\" placeholder=\"Password\" />\n                            </div>\n\n                            <LoggerBtn btnType={'log in'} />\n                        </form>\n                    </Row>\n                    <Row classes={'justify-content-center'}>\n                        <p> New here?\n                        <Link to=\"/signup\" > Sign up.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n\n        </div>\n    )\n}\nconst  background = {\n    backgroundImage: \"url(\" + require(\"../../assets/img/backgroundImage2.jpg\") + \")\",\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\"\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Container, Row, Col } from \"../../components/Grid\";\nimport { LoggerBtn, Input } from \"../../components/Forms\";\nimport API from \"../../utils/API\";\nimport Auth from \"../../Auth\";\n\nexport default function SignUp() {\n\n    let history = useHistory();\n    const [credentials, setCredentials] = useState({}),\n\n    onInputChange = e => {\n        const { name, value } = e.target;\n        setCredentials({ ...credentials, [name]: value });\n    },\n\n    authorize = () => {\n        Auth.login(() => {\n            history.push(\"/patients\");\n        });\n    },\n\n    handleSubmit = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        try {\n            API.register(credentials)\n                .then(({ statusText }) => {\n                    if (statusText === 'OK') {\n                        API.login(credentials)\n                            .then(({ data }) => {\n                                if (data.status === 'success') {\n                                    authorize()\n                                }\n                            })\n                    }\n                })\n        } catch (err) { console.log(err) }\n    }\n    return (\n        <div\n            style={background}\n        >\n        <Container>\n            <Row classes=\"justify-content-center\">\n                <Col size={\"md-12\"} classes={\"box-shadow sign\"}>\n                    <Row >\n                        <div className={\"mt-5\"}>\n                            <h5 style={text}>\n                                <img\n                                    style={logo}\n                                    src={require(\"../../assets/img/Logo.png\")}\n                                    alt={\"Logo\"}\n                                />\n                                Create your account\n                            </h5>\n                        </div>\n                    </Row>\n                    <Row>\n                        <form onSubmit={handleSubmit} className={\"card-body\"}>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Email:</label>\n                                <span className=\"fa fa-user\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    placeholder=\"E-mail address\"\n                                />\n                            </div>\n                            <div className={\"form-group usr-inpt\"}>\n                                <label>Password:</label>\n                                <span className=\"fa fa-lock\" />\n                                <Input\n                                    onChange={onInputChange}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                            </div>\n\n                            <LoggerBtn btnType={\"Sign Up\"} />\n                        </form>\n                    </Row>\n                    <Row classes={\"justify-content-center\"}>\n                        <p>\n                            Already have an account?\n                            <Link to=\"/SignIn\"> Log In.</Link>\n                        </p>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n    );\n}\nconst  background = {\n    backgroundImage: \"url(\" + require(\"../../assets/img/backgroundImage2.jpg\") + \")\",\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh'\n},\n\nlogo = {\n    width: \"60px\",\n    height: \"auto\"\n},\n\ntext = {\n    color: \"#0099ff\",\n    textShadow: \"1px 1px #000\"\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from '../Grid';\n\n\nexport function PatientList({ patient, context, removeState, confirmRemoval, remove, index }) {\n\n    const { patientData, healthData, _id } = patient\n     \n    //keep invalid or corrupt data away from the EHR page.\n    if(!patientData || !healthData){\n        return <div></div>\n    }\n    const { firstName, nickname } = patientData;\n\n    let name;\n      if (firstName || nickname) {\n          name = (nickname && nickname !== '') ? nickname : firstName;\n        } else {\n            name = \"\"\n    }\n\n    if (removeState) {\n        if(patient.removable) {\n    return (\n        <div className={'patient-remove'}>\n        <Link to='/patients'\n            onClick={remove.bind(this, _id)}  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center btn btn-outline-danger\">\n                <Row >\n                <Col size={\"md-4\"}>\n                        <i className=\"fas fa-user-times fa-4x rm-lg-user\" />   \n                    </Col>\n                    <Col size ={\"md-8\"}> \n                        <h2 className=\"card-title\">Please Confirm</h2>\n                        <p className=\"card-text\"> \n                            This will remove {name !== '' ? name : 'this patient'} from your list.\n                        </p>\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </Link>\n         </div>\n    )}\n        else {\n    return (\n        <div className={'patient-remove'}>\n        <Link to='/patients'\n            onClick={confirmRemoval.bind(this, index)}  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center\">\n                <Row >\n                    <Col size ={\"md-2\"}></Col>\n                    <Col size ={\"md-8\"}> \n                        <h2 className=\"card-title\">Remove {name === '' ? 'this patient' : name}</h2>\n                        <p className=\"card-text\"> \n                            Delete {name !== '' ? name : 'this patient'} from your patient list?\n                        </p>\n                    </Col>\n                    <Col size={\"md-2\"}>\n                        <i className=\"fas fa-user-times fa-2x rm-sm-user\" style={toggleBtn} \n                        />   \n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </Link>\n         </div>\n    )}\n    }\n    return (\n        <Link to={{\n            pathname:'/ehr',\n            state: { patientId: _id, name }\n        }}\n            onClick={()=>{context({ patientId: _id, name })}}  //set patientContext as universal variable.  \n            style={{textDecoration: 'none'}}\n            >\n            <div className=\"card box-shadow mt-5\">\n                <div className=\"card-body text-center\">\n                    <h2 className=\"card-title\">{name === '' ? 'name this patient' : name}</h2>\n                    <p className=\"card-text\"> \n                        Access {name !== '' ? name : 'this patient'}'s information here.\n                    </p>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nconst toggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport {  Button } from \"../../components/Forms\";\n\n\nexport function PatientHandler({ removeState, toggleRemoveState, confirmed, cancel }) {\n\n    if (removeState) {\n      if (confirmed) {\n        return (\n              <div className={\"remove\"}>\n                <Button\n                  className=\"btn minus\"\n                  style={removeState ? { float: \"left\", color: \"tomato\"} : {float: \"left\"}}\n                  onClick={cancel}\n                >\n                  <i className=\"fas fa-hand-point-right\" /> last chance to cancel\n                </Button>\n              </div>\n            );\n          } else {\n        return (\n              <div className={\"remove\"}>\n                <Button\n                  className=\"btn minus\"\n                  style={removeState ? { float: \"left\", color: \"tomato\"} : {float: \"left\"}}\n                  onClick={() => {\n                    toggleRemoveState(!removeState);\n                  }}\n                >\n                  <i className=\"fas fa-ban\" /> Cancel\n                </Button>\n              </div>\n            );\n          } \n        }else {\n            return (\n              <div>\n                <div className={\"add\"}>\n                  <Link to={{\n                 pathname:'/ehr',\n                 state: { patientId:\"\" }\n                }} \n                    className=\"btn plus\"\n                    style={{ float: \"right\" }}\n                  >\n                    <i class=\"fas fa-user-plus\"></i> New Patient\n                  </Link>\n                  </div>\n                  <div className={\"remove\"}>\n                    <Button className=\"btn minus\"\n                      style={{ float: \"left\" }}\n                      onClick={() => {\n                        toggleRemoveState(!removeState);\n                    }}\n                   >\n                    <i className=\"fas fa-user-minus\"/> Remove Patients\n                  </Button>\n                </div>\n              </div>\n            );\n    }\n}\n\n","import React, { useState, useEffect} from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { PatientList } from '../../components/PatientList'; \nimport { PatientHandler }  from '../../components/PatientHandler'; \nimport API from \"../../utils/API\";\n\n\nexport default function Patients({ setContext }) {\n\n    const [ patients, setPatients ] = useState([]),\n      [ removeState, setRemoveState ] = useState(false),\n      [ confirmed, isConfirmed ] = useState(false);\n\n    useEffect(() => {\n        getPatients()\n    }, [])\n\n    const getPatients = async () => {\n        const { data } = await API.getUser(),\n   \n          patients = await API.fetchPatients(data.user);\n\n        setPatients(patients.data);\n    },\n\n    removePatient = async _id => {\n       await API.removePatient(_id)\n\n       setRemoveState(false)\n       getPatients()\n    },\n\n    togglePatientAsRemovable = index => {\n        const clone = patients;\n        \n        clone[index].removable = !clone[index].removable\n        \n        isConfirmed(true)\n        setPatients(clone)\n    },\n\n    cancelPatientRemoval = () => {\n        const clone = patients;\n        \n        clone.forEach( item => {\n            item.removable = false\n        })\n        isConfirmed(false)\n        setRemoveState(false)\n        setPatients(clone)\n    }\n\n\n    return (\n        <Container>\n            <Row>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    {\n                        patients.map( (patient, i) => \n                            <PatientList \n                            patient={patient} \n                            index={i} \n                            context={setContext}  \n                            removeState={removeState}\n                            confirmRemoval={togglePatientAsRemovable}\n                            remove={removePatient}\n                            key={patient._id} \n                            />)\n                    }\n                    <PatientHandler \n                        removeState={removeState}\n                        confirmed={confirmed}\n                        cancel={cancelPatientRemoval}\n                        toggleRemoveState={() => {setRemoveState(!removeState)}} \n                        />\n                </Col>\n           </Row>\n        </Container>\n    )\n}\n","import { useState, useEffect, useRef } from 'react';\n\n\n//used track previous states for comparison purposes. ex use:  previousItem = usePrevious(itemInput.property),\n export const usePrevious = value => {\n\n        const ref = useRef();\n\n        useEffect(() => {\n        ref.current = value;\n        }, [value]);\n\n    return ref.current;\n}\n\n//force the re-rendering of state.\nexport const useForceUpdate = () => {\n    const [value, setValue] = useState(0); \n    return () => setValue(value => ++value); // update the state to force render\n}\n","import { createContext } from 'react';\n\nexport default createContext({\n    patientId: '',\n    name: ''\n})\n","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\n\nexport function GeneralInfo({ data, target, editState, toggleState, formSubmit, name }) {\n\nif (editState) {\n    return (\n        <div className={'my-5'}>\n        <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Contact Information:</h5></em>\n        \n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" \n                style={{ ...toggleBtn, color: \"tomato\" }} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name</label>\n                        <Input value={data ? data.firstName : ''} name=\"firstName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name</label>\n                        <Input value={data ? data.lastName : ''} name=\"lastName\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname</label>\n                        <Input value={data ? data.nickname : ''} name=\"nickname\"\n                        style={input}\n                        placeholder={\"e.g. 'Mom'\"} \n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 1</label>\n                        <Input value={data ? data.addressOne : ''} name=\"addressOne\"\n                        style={input}\n                        onChange={target} \n                        />                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address Line 2</label>\n                        <Input value={data ? data.addressTwo : ''} name=\"addressTwo\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City</label>\n                        <Input value={data ? data.city : ''} name=\"city\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence</label>\n                        <Input value={data ? data.state : ''} name=\"state\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code</label>\n                        <Input value={data ? data.zip : ''} name=\"zip\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country</label>\n                        <Input value={data ? data.country : ''} name=\"country\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                    <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number</label>\n                        <Input value={data ? data.phone : ''} name=\"phone\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email</label>\n                        <Input value={data ? data.email : ''} name=\"email\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n    )\n    } else {\n        return (\n            <div className={'my-5 gen-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Contact Information:</h5></em>\n\n                <Col size={'md-12'} classes={'mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>First Name:</label>\n                        <div style={fieldText}>{data.firstName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Last Name:</label>\n                        <div style={fieldText}>{data.lastName}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Nickname:</label>\n                        <div style={fieldText}>{data.nickname}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 1:</label>\n                        <div style={fieldText}>{data.addressOne}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Address line 2:</label>\n                        <div style={fieldText}>{data.addressTwo}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>City:</label>\n                        <div style={fieldText}>{data.city}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>State/Providence:</label>\n                        <div style={fieldText}>{data.state}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Zip/Postal Code:</label>\n                        <div style={fieldText}>{data.zip}</div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Country:</label>\n                        <div style={fieldText}>{data.country}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Phone Number:</label>\n                        <div style={fieldText}>{data.phone}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Email:</label>\n                        <div style={fieldText}>{data.email}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\n\nexport function HealthCard({ data, target, editState, toggleState, formSubmit, name }) {\n\n    const getAge = DOB => {\n\n        const today = new Date(),\n         birthDate = new Date(DOB),\n          month = today.getMonth() - birthDate.getMonth();\n        let age = today.getFullYear() - birthDate.getFullYear();\n\n          if(isNaN(age)) return '??'\n            \n    return month < 0 || (month === 0 && today.getDate() < birthDate.getDate()) ? age - 1 : age;\n    },\n\n     getBloodTypes = bloodType => {\n    \n        const types = ['Select', 'Unknown', 'A-Positive', 'A-Negative', 'B-Positive', 'B-Negative', 'AB-Positive', 'AB-Negative', 'O-Positive', 'O-Negative']\n    \n    return types.map( type => type === bloodType ? <option value={bloodType} selected>{bloodType}</option> : <option>{type}</option>)\n     },\n\n     getGenders = gender => {\n    \n        const types = ['Select', 'Male', 'Female', 'Transgender Male', 'Transgender Female']\n    \n    return types.map( type => type === gender ? <option value={gender} selected>{gender}</option> : <option>{type}</option>)\n     };\n    \nif (editState) {\n    return (\n        <div className={'my-5'}>\n            <em><h5 style={{textDecoration: \"underline\"}}>\n            {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n          <Col size={'md-12'} classes={\"mt-5\"}>\n                <Button className=\"fas fa-backspace fa-2x\" style={{...toggleBtn, color: \"tomato\"}} \n                onClick={toggleState} />\n            </Col>\n            <form onSubmit={formSubmit} >\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth</label>\n                        <Input name=\"dob\" placeholder=\"MM/DD/YYYY\"\n                        value={data.dob}\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                    <label>Gender</label>\n                        <select name=\"gender\" className=\"form-control\"\n                        style={input}\n                        onChange={target} >\n                            {getGenders(data.gender)}    \n                        </select>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type</label>\n                        <select name=\"bloodType\" className=\"form-control\"\n                        style={input} \n                        onChange={target} >\n                            {getBloodTypes(data.bloodType)}\n                        </select>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan</label>\n                        <Input value={data.insurance} name=\"insurance\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number</label>\n                        <Input value={data.insNumber} name=\"insNumber\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN</label>\n                        <Input value={data.rxBin} name=\"rxBin\"\n                        style={input}\n                        onChange={target} \n                        />                    \n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN</label>\n                        <Input value={data.rxPcn} name=\"rxPcn\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies</label>\n                        <TextArea value={data.allergies} name=\"allergies\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received)</label>\n                        <TextArea value={data.immunizations} name=\"immunizations\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes</label>\n                        <TextArea value={data.notes} name=\"notes\"\n                        style={input}\n                        onChange={target} \n                        />\n                    </Col>\n                </div>\n                <Col size={'md-12'}>\n                <Button className=\"btn\" style={updtBtn} \n                    type=\"submit\" > <i className=\"fas fa-sync-alt mr-2\"/> {' '}  \n                        {' '} update \n                    </Button>\n                </Col>\n            </form>\n        </div>\n        )\n    } else {\n        return (\n            <div className={'my-5 health-info'}>\n                <em><h5 style={{textDecoration: \"underline\"}}>\n                {name ? `${name}'s` : ''} Basic Health Information:</h5></em>\n\n                <Col size={'md-12'} classes={'gen-edit mt-5'}>\n                    <Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n                        onClick={toggleState} \n                    />   \n                </Col>\n            <form>\n                <div className={\"form-row\"}>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Date of Birth:</label>\n                        <div style={fieldText}>{data.dob}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Age:</label>\n                        <div style={fieldText}>\n                            {getAge(data.dob)}\n                        </div>\n                    </Col>\n                    <Col size={'md-3'} classes={'form-group'}>\n                        <label>Gender:</label>\n                        <div style={fieldText}>{data.gender}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Blood Type:</label>\n                        <div style={fieldText}>{data.bloodType}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Insurance Plan:</label>\n                        <div style={fieldText}>{data.insurance}</div>\n                    </Col>\n                    <Col size={'md-4'} classes={'form-group'}>\n                        <label>Number:</label>\n                        <div style={fieldText}>{data.insNumber}</div>\n                    </Col>\n        \n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx BIN:</label>\n                        <div style={fieldText}>{data.rxBin}</div>\n                    </Col>\n                    <Col size={'md-2'} classes={'form-group'}>\n                        <label>Rx PCN:</label>\n                        <div style={fieldText}>{data.rxPcn}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Allergies:</label>\n                        <div style={fieldText}>{data.allergies}</div>\n                    </Col>\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Immunizations (include dates received):</label>\n                        <div style={fieldText}>{data.immunizations}</div>\n                    </Col>\n                </div>\n                <div className=\"form-row\">\n                    <Col size={'md-6'} classes={'form-group'}>\n                        <label>Family History & Other Notes:</label>\n                        <div style={fieldText}>{data.notes}</div>\n                    </Col>\n                </div>\n            </form>\n         </div>\n        )\n    }\n}\n\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\ntoggleBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'white',\n    backgroundColor: 'white'\n},\nupdtBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#214c91',\n    color: 'white',\n    padding: \".4rem .75rem\"\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React from 'react';\nimport { Col } from '../Grid';\nimport { Input, Button, TextArea } from '../Forms';\n\nexport function Conditions({\n\tdata,\n\tname,\n\ttarget,\n\tareaTarget,\n\teditState,\n\ttoggleState,\n\tformSubmit,\n\trenderSuggestions,\n\tremove,\n\ttext,\n\ttoggleDescState,\n\teditDescState\n}) {\n\t\n\tconst getRowHeight = (text) => (text.length > 250 ? text.length / 80 : 3),\n\n\t\trenderConditions = conditions => {\n\t\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => \n\t\t\t\t(\n\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t<label style={fieldText}>{condition.name} </label>\n\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t</Col>\n\t\t\t));\n\t\t};\n\n\tfunction renderEditConditions(conditions) {\n\t\treturn conditions.sort((a, b) => b.createdAt - a.createdAt).map((condition, i) => {\n\t\t\t\n\t\t\tif (condition.edit) {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\t\tstyle={{ border: 'none' }}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"fas fa-sync-alt\"\n\t\t\t\t\t\t\t\t\tstyle={littleEditBtn}\n\t\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tvalue={condition.description}\n\t\t\t\t\t\t\t\trows={getRowHeight(condition.description)}\n\t\t\t\t\t\t\t\tonChange={areaTarget(i)}\n\t\t\t\t\t\t\t\tstyle={textarea}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<Col key={i} size={'md-12'} classes={'form-group'}>\n\t\t\t\t\t\t<label style={fieldText}>\n\t\t\t\t\t\t\t{condition.name} {' '}\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"fas fa-pen\"\n\t\t\t\t\t\t\t\tstyle={{ border: 'none' }}\n\t\t\t\t\t\t\t\tonClick={toggleDescState.bind(this, i)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button className=\"fas fa-times\" style={removeBtn} onClick={remove.bind(this, i)} />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div>{condition.description}</div>\n\t\t\t\t\t</Col>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tif ((editState || data.length === 0) && !editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes=\"mt-5\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: 'tomato' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\"  autoComplete=\"off\"\n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else if (editDescState) {\n\t\treturn (\n\t\t\t<div className={'my-5'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12 mt-5'}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"fas fa-backspace fa-2x\"\n\t\t\t\t\t\tstyle={{ ...toggleBtn, color: 'tomato' }}\n\t\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form onSubmit={formSubmit}>\n\t\t\t\t\t<div className=\"form-row\" style={{ background: 'white' }}>\n\t\t\t\t\t\t<Col size={'md-6'} classes={'form-group'}>\n\t\t\t\t\t\t\t<label>Add New Condition</label>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Input type=\"text\" \n\t\t\t\t\t\t\t\tstyle={input} \n\t\t\t\t\t\t\t\tvalue={text} \n\t\t\t\t\t\t\t\tonChange={target} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{renderSuggestions()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col size={'md-3'}>\n\t\t\t\t\t\t\t<Button className=\"btn\" style={addBtn} type=\"submit\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<i className=\"fa fa-plus fa-2x mr-2\" /> Add\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={'form-row'}>{renderEditConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className={'mt-5 condition-info'}>\n\t\t\t\t<em>\n\t\t\t\t\t<h5 style={{ textDecoration: 'underline' }}>\n\t\t\t\t\t{name ? `${name}'s` : ''} Health Conditions:</h5>\n\t\t\t\t</em>\n\n\t\t\t\t<Col size={'md-12'} classes={'condition-edit mt-5'}>\n\t\t\t\t\t<Button className=\"fas fa-user-edit fa-2x\" style={toggleBtn} \n\t\t\t\t\tonClick={toggleState}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<form>\n\t\t\t\t\t<div className={'form-row'}>{renderConditions(data)}</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\nconst fieldText = {\n\t\tfontStyle: 'italic',\n\t\tfontWeight: '1000',\n\t\tpadding: '10px 10px 10px 0',\n\t\tcolor: 'black'\n\t},\n\ttextarea = {\n\t\tresize: 'none',\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\tinput = {\n\t\tborderBottom: '1px solid rgba(0, 0, 0, .2)',\n\t\ttransition: 'all 0.30s ease-in-out'\n\t},\n\ttoggleBtn = {\n\t\tfloat: 'right',\n\t\tborder: 'none',\n\t\tmargin: '0',\n\t\tcolor: 'white',\n\t\tbackgroundColor: 'white'\n\t},\n\taddBtn = {\n\t\tmarginTop: '30px',\n\t\tcolor: '#214c91',\n\t\tfocus: 'none',\n\t\tsize: '10em'\n\t},\n\tlittleEditBtn = {\n\t\tborder: 'none',\n\t\tcolor: '#214c91'\n\t},\n\tremoveBtn = {\n\t\tborder: 'none',\n\t\tcolor: 'red'\n\t};\n","import React from 'react'\nimport { Col } from '../Grid';\nimport { Input, Button } from '../Forms';\n\nexport function Medications({ \n    data, \n    text, \n    name,\n    target, \n    remove, \n    addDoses, \n    editState, \n    formSubmit, \n    toggleState, \n    otherDosage, \n    doseChoices, \n    renderSuggestions\n}) {\n\n    const renderDoses = doses => {\n        if (!doses || otherDosage === 'Other Dose') {\n            return (\n                <Input name=\"dosage\" placeholder=\"Enter Dosage\"\n                    style={input}\n                    onChange={target}\n                />\n            )\n        } else {\n            const clone = doses.includes('Other Dose') ? doses : doses.concat('Other Dose');\n            return (\n                <select name=\"dosage\" style={input}\n                    onChange={target}\n                    className=\"form-control\">\n                    <option defaultValue>Which Dose?</option>\n\n                    {clone.map((dose, i) => <option key={i} >{dose}</option>)}\n\n                </select>\n            )\n        }\n    },\n\n        renderMeds = meds => {\n            return meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) => (\n\n                <Col key={i} size={\"md-12\"} classes={\"form-group\"}>\n                    <label style={fieldText}>{med.medication} </label>\n                    <div>{med.dosage}</div>\n                </Col>\n            ));\n        }\n\n    function renderEditMeds(meds) {\n        return (\n            meds.sort((a, b) => b.createdAt - a.createdAt).map((med, i) =>\n            \n                <Col key={i} size={'md-12'} classes={'form-group'}>\n                    <label style={fieldText}>\n                        {med.medication}\n                        {' '}\n                        <Button className=\"fas fa-times\" type='submit' style={removeBtn}\n                            onClick={remove.bind(this, i)}\n                        />\n                    </label>\n                    <div>\n                        {med.dosage}\n                    </div>\n                </Col>\n            )\n        )\n    }\n\n    if ((editState || data.length === 0)) {\n        return (\n            <div className={'my-5'}>\n                <em><h5 style={{ textDecoration: \"underline\" }}>\n                {name ? `${name}'s` : ''} Medications:</h5></em>\n\n                <Col size={'md-12'} classes=\"mt-5\">\n                    <Button className=\"fas fa-backspace fa-2x\"\n                        style={{ ...toggleBtn, color: \"tomato\" }}\n                        onClick={toggleState}\n                    />\n                </Col>\n                <form onSubmit={formSubmit} >\n                    <div className=\"form-row\" style={{ background: 'white' }}>\n                        <Col size={'md-4'} classes={'form-group'}>\n                            <label>Add New Medication</label>\n                            <Button className=\"fas fa-hand-point-right\"\n                                style={littlePointBtn}\n                                onClick={addDoses}\n                            ></Button>\n                            <div>\n                                <Input name=\"medication\" autoComplete=\"off\"\n                                    style={input}\n                                    value={text}\n                                    onBlur={addDoses}\n                                    onChange={target}\n                                />\n\n                                {renderSuggestions()}\n\n                            </div>\n                        </Col>\n                        <Col size={'md-4'} classes={'form-group'}>\n                            <label>Select Dosage</label>\n                            <div>\n\n                                {renderDoses(doseChoices)}\n\n                            </div>\n                        </Col>\n                        <Col size={'md-2'}>\n                            <Button className=\"btn\" style={addBtn}\n                                type=\"submit\"  > <i className=\"fa fa-plus fa-2x mr-2\" />\n                                {' '} Add\n                        </Button>\n                        </Col>\n                    </div>\n                </form>\n                <div className={\"form-row\"}>\n\n                    {renderEditMeds(data)}\n\n                </div>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className={'my-5 med-info'}>\n                <em><h5 style={{ textDecoration: \"underline\" }}>\n                {name ? `${name}'s` : ''} Medications:</h5></em>\n\n                <Col size={'md-12'} classes={\"mt-5\"}>\n                    <Button className=\"fas fa-user-edit fa-2x\"\n                        style={toggleBtn}\n                        onClick={toggleState}\n                    />\n                </Col>\n                <form>\n                    <div className={\"form-row\"}>\n\n                        {renderMeds(data)}\n\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst fieldText = {\n    fontStyle: 'italic',\n    fontWeight: '1000',\n    padding: '10px 10px 10px 0',\n    color: 'black'\n},\n    input = {\n        borderBottom: '1px solid rgba(0, 0, 0, .2)',\n        transition: 'all 0.30s ease-in-out'\n    },\n    toggleBtn = {\n        float: 'right',\n        border: 'none',\n        margin: '0',\n        color: 'white',\n        backgroundColor: 'white'\n    },\n    addBtn = {\n        marginTop: '30px',\n        color: '#214c91',\n        focus: 'none',\n        size: '10em'\n    },\n    littlePointBtn = {\n        border: 'none',\n        color: 'green',\n        float: 'right',\n        backgroundColor: 'white'\n    },\n    removeBtn = {\n        backgroundColor: 'white',\n        border: 'none',\n        color: 'red'\n    }\n","import React from 'react'\nimport { Col } from '../../components/Grid';\nimport { Input, Button } from '../../components/Forms';\n\n\nexport function NewContact({ target, toggleState, formSubmit }) {\n\n    return (\n    <div className={'my-5'}>\n        <Col size={'md-12'}>\n            <Button className=\"fas fa-backspace fa-2x\" style={cancelBtn} \n            onClick={toggleState} />\n        </Col>\n        <form onSubmit={formSubmit} >\n            <div className={\"form-row\"}>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact for</label>\n                    <Input name=\"contact\" \n                    placeholder=\"PCP, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Office or Business Name</label>\n                    <Input name=\"office\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Contact Name</label>\n                    <Input name=\"name\" \n                    placeholder=\"Dr. Smith\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 1</label>\n                    <Input name=\"addressOne\"\n                    style={input}\n                    onChange={target} \n                    />                    </Col>\n                <Col size={'md-6'} classes={'form-group'}>\n                    <label>Address Line 2</label>\n                    <Input name=\"addressTwo\"\n                    style={input}\n                    onChange={target} \n                    />                    \n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>City</label>\n                    <Input name=\"city\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>State/Providence</label>\n                    <Input name=\"state\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Zip/Postal Code</label>\n                    <Input name=\"zip\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-3'} classes={'form-group'}>\n                    <label>Country</label>\n                    <Input name=\"country\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Primary Phone</label>\n                    <Input name=\"primaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"primaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Another Phone</label>\n                    <Input name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-2'} classes={'form-group'}>\n                    <label>Ext.</label>\n                    <Input name=\"secondaryExt\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                </div>\n                <div className=\"form-row\">\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Fax</label>\n                    <Input name=\"fax\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Email</label>\n                    <Input name=\"email\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n                <Col size={'md-4'} classes={'form-group'}>\n                    <label>Website</label>\n                    <Input name=\"website\"\n                    style={input}\n                    onChange={target} \n                    />\n                </Col>\n            </div>\n            <Col size={'md-12'}>\n            <Button className=\"btn\" style={saveBtn} \n                type=\"submit\" > <i className=\"fa fa-address-book mr-2\"/> {' '}  \n                    {' '} Save \n                </Button>\n            </Col>\n        </form>\n    </div> \n    )\n}\n\nconst cancelBtn = {\n    float: 'right',\n    border: 'none',\n    margin: '0',\n    color: 'tomato',\n    backgroundColor: 'white'\n},\nsaveBtn = {\n    float: 'right',\n    margin: '0',\n    backgroundColor: '#55595c',\n    color: 'white',\n},\ninput = {\n    borderBottom: '1px solid rgba(0, 0, 0, .2)',\n    transition: 'all 0.30s ease-in-out'\n}","import React, { useState } from \"react\";\nimport { Col } from \"../../components/Grid\";\nimport { NewContact } from \"../../components/NewContact\";\nimport { Input, Button } from \"../../components/Forms\";\n\nexport function Contacts({\n  data,\n  name,\n  target,\n  remove,\n  newContact,\n  toggleNew,\n  newTarget,\n  toggleState,\n  formSubmit\n}) {\n\n  const [ confirmed, isConfirmed ] = useState(false),\n\n    formatPhoneNumberLink = number => number ? number.replace(/[^\\d]/g, '') : \"\",\n  \n    getNewContact = nextContact => {\n      if (nextContact) {\n        return (\n          <NewContact\n            target={newTarget}\n            toggleState={toggleNew}\n            formSubmit={formSubmit}\n          />\n        );\n      }\n    },\n\n    confirmRemoval = i => {\n      if (confirmed) {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              style={{ float: \"right\" }}\n              onClick={remove.bind(this, i, () => {isConfirmed(!confirmed)})}\n            >\n              <i className=\"fas fa-user-times\"> </i> Confirm Delete\n            </Button>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fas fa-ban\" /> Cancel\n            </Button>\n          </div>\n        );\n      } else {\n        return (\n          <div className={\"remove\"}>\n            <Button\n              className=\"btn minus\"\n              style={{ float: \"left\" }}\n              onClick={() => {\n                isConfirmed(!confirmed);\n              }}\n            >\n              <i className=\"fa fa-minus\" /> Remove Contact\n            </Button>\n          </div>\n        );\n      }\n    };\n\n  function renderContacts(contacts) {\n    return contacts.map((contact, i) => {\n      if (contact.edit) {\n        return (\n          <div key={i} className={\"mt-5\"}>\n            <Col size={\"md-12\"}>\n              <Button\n                className=\"fas fa-backspace fa-2x\"\n                style={confirmed ? { ...cancelBtn, color: \"white\" } : cancelBtn}\n                onClick={toggleState.bind(this, i)}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for</label>\n                  <Input\n                    value={contact.contact}\n                    name=\"contact\"\n                    placeholder=\"Dr, Pharmacy, etc..\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name</label>\n                  <Input\n                    value={contact.office}\n                    name=\"office\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name</label>\n                  <Input\n                    value={contact.name}\n                    name=\"name\"\n                    placeholder=\"Dr. Smith\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 1</label>\n                  <Input\n                    value={contact.addressOne}\n                    name=\"addressOne\"\n                    style={input}\n                    onChange={target(i)}\n                  />{\" \"}\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address Line 2</label>\n                  <Input\n                    value={contact.addressTwo}\n                    name=\"addressTwo\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City</label>\n                  <Input\n                    value={contact.city}\n                    name=\"city\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>State/Providence</label>\n                  <Input\n                    value={contact.state}\n                    name=\"state\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code</label>\n                  <Input\n                    value={contact.zip}\n                    name=\"zip\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country</label>\n                  <Input\n                    value={contact.country}\n                    name=\"country\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone</label>\n                  <Input\n                    value={contact.primaryPhone}\n                    name=\"primaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.primaryExt}\n                    name=\"primaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone</label>\n                  <Input\n                    value={contact.secondaryPhone}\n                    name=\"secondaryPhone\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext.</label>\n                  <Input\n                    value={contact.secondaryExt}\n                    name=\"secondaryExt\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax</label>\n                  <Input\n                    value={contact.fax}\n                    name=\"fax\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email</label>\n                  <Input\n                    value={contact.email}\n                    name=\"email\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website</label>\n                  <Input\n                    value={contact.website}\n                    name=\"website\"\n                    style={input}\n                    onChange={target(i)}\n                  />\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-12\"}>\n                  {confirmRemoval(i)}\n\n                  <Button\n                    className=\"btn\"\n                    style={confirmed ? { display: \"none\" } : updtBtn}\n                    onClick={toggleState.bind(this, i)}\n                  >\n                    <i className=\"fas fa-sync-alt mr-2\" />\n                    update\n                  </Button>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      } else {\n        return (\n          <div key={i} className={\"mt-5 contacts-info\"}>\n            <Col size={\"md-12\"} classes={\"contacts-edit\"}>\n              <Button\n                className=\"fas fa-user-edit fa-2x\"\n                style={editBtn}\n                onClick={ ()=>{\n                  isConfirmed(false); \n                  toggleState(i)\n                }}\n              />\n            </Col>\n            <form>\n              <div className={\"form-row\"}>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact for:</label>\n                  <div style={fieldText}>{contact.contact}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Office or Business Name:</label>\n                  <div style={fieldText}>{contact.office}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Contact Name:</label>\n                  <div style={fieldText}>{contact.name}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 1:</label>\n                  <div style={fieldText}>{contact.addressOne}</div>\n                </Col>\n                <Col size={\"md-6\"} classes={\"form-group\"}>\n                  <label>Address line 2:</label>\n                  <div style={fieldText}>{contact.addressTwo}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>City:</label>\n                  <div style={fieldText}>{contact.city}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>State/Providence:</label>\n                  <div style={fieldText}>{contact.state}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Zip/Postal Code:</label>\n                  <div style={fieldText}>{contact.zip}</div>\n                </Col>\n                <Col size={\"md-3\"} classes={\"form-group\"}>\n                  <label>Country:</label>\n                  <div style={fieldText}>{contact.country}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Primary Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.primaryPhone)}`}>{contact.primaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.primaryExt}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Another Phone:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                  <a href={`tel:${formatPhoneNumberLink(contact.secondaryPhone)}`}>{contact.secondaryPhone}</a>\n                  </div>\n                </Col>\n                <Col size={\"md-2\"} classes={\"form-group\"}>\n                  <label>Ext:</label>\n                  <div style={fieldText}>{contact.secondaryExt}</div>\n                </Col>\n              </div>\n              <div className=\"form-row\">\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Fax:</label>\n                  <div style={fieldText}>{contact.fax}</div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Email:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}>\n                    <a href={`mailto:${contact.email}`}>{contact.email}</a>\n                    </div>\n                </Col>\n                <Col size={\"md-4\"} classes={\"form-group\"}>\n                  <label>Website:</label>\n                  <div style={{...fieldText, textDecoration: 'underline'}}> \n                  <a target=\"_blank\" rel=\"noreferrer noopener\" \n                    href={`https://${contact.website}`}>{contact.website}</a>\n                  </div>\n                </Col>\n              </div>\n            </form>\n          </div>\n        );\n      }\n    });\n  }\n\n  return (\n    <div className={\"my-5\"}>\n      <em>\n        <h5 style={{ textDecoration: \"underline\" }}>\n          Emergency or other contact Info {name ? `for ${name}` : ''}:\n        </h5>\n      </em>\n\n      {renderContacts(data)}\n\n      {getNewContact(newContact)}\n\n      <div className={\"add\"}>\n        <Button\n          className=\"btn plus\"\n          style={newContact ? { display: \"none\" } : { display: \"block\" }}\n          onClick={toggleNew}\n        >\n          <i className=\"fa fa-plus\" /> New Contact\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst fieldText = {\n    fontStyle: \"italic\",\n    fontWeight: \"1000\",\n\t\tpadding: '10px 10px 10px 0',\n    color: \"black\"\n  },\n  input = {\n    borderBottom: \"1px solid rgba(0, 0, 0, .2)\",\n    transition: \"all 0.30s ease-in-out\"\n  },\n  updtBtn = {\n    float: \"right\",\n    margin: \"0\",\n    backgroundColor: \"#214c91\",\n    color: \"white\"\n  },\n  editBtn = {\n    float: \"right\",\n    border: \"none\",\n    margin: \"0\",\n    color: \"white\",\n    backgroundColor: \"white\"\n  },\n  cancelBtn = {\n    float: \"right\",\n    border: \"none\",\n    margin: \"0\",\n    color: \"tomato\",\n    backgroundColor: \"white\"\n  };\n","import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { GeneralInfo } from '../../components/GeneralInfo';\nimport { HealthCard } from '../../components/HealthCard';\nimport { Conditions } from '../../components/Conditions';\nimport { Medications } from '../../components/Medications';\nimport { Contacts } from '../../components/Contacts';\nimport API from '../../utils/API';\n\nexport default function EHR({ location, setContext }) {\n\n/*\n    Globals\n*/ \n    let { patientId, name } = useContext(PatientContext);\n        patientId = patientId ? patientId : location.state.patientId;\n  \n    const [ patient, setPatient ] = useState(patientId),\n        [generalInfo, setGeneralInfo] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n        [ contacts, setContacts ] = useState([]),\n        [ medInput, setMedInput ] = useState(''),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ editGenState, setGenState ] = useState(false),\n        [ editHealthState, setHealthState ] = useState(false),\n        [ editConditState, setConditState ] = useState(false),\n        [ editMedsState, setMedsState ] = useState(false),\n        [ descEditState, setDescEditState ] = useState(false),\n        [ conditSuggestions, setConditSuggestions ] = useState([]),\n        [ medSuggestions, setMedSuggestions ] = useState([]),\n        [ doses, setDoses ] = useState(''),\n        [ query, setQuery ] = useState(''),\n\n        forceUpdate = useForceUpdate(), \n        hasConditions = useRef(), \n        hasMeds = useRef(), \n        hasContacts = useRef(), \n        isInitialMount = useRef(true);\n\n/*\n    EHR Setup and Initialization\n*/ \n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {  \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [generalInfo, healthInfo, conditions, meds, contacts]);\n\n    const getPatient = async() => {\n        if (location.state.patientId === \"\") {\n            newPatient()\n        } else {\n        const { data } = await API.fetchPatient(patient)\n            setGeneralInfo(data.patientData)\n            setHealthInfo(data.healthData)\n            setConditions(data.healthConditions)\n            setMeds(data.medications)\n            setContacts(data.contacts)\n            setParity(data)\n        } \n    },\n\n     //if no patient is passed in, create a new one on the server.\n    newPatient = async() => {\n        const user  = await API.getUser(),\n            email = user.data.user.email;\n   \n        const newPatient = {email, generalInfo, healthInfo, conditions, meds, contacts},\n         { data } = await API.addPatient(newPatient);\n\n        setPatient(data._id);\n        setGenState(true)\n        setHealthState(true)\n        setParity()\n    },\n\n/*\n    State and database management\n*/ \n    updateDB = e => {\n        if(e) {\n            e.preventDefault()\n            setGenState(false)\n            setHealthState(false)\n        }\n        if(parity()) {\n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n        \n        API.updateEHR(patient, data)\n            .catch(err => console.log(err))        \n        }     \n    }, \n\n    setParity = (data) => {\n        hasConditions.current = (data && data.healthConditions.length > 0) ? true : false;     \n        hasMeds.current = (data && data.medications.length > 0) ? true : false;     \n        hasContacts.current = (data && data.contacts.length > 0) ? true : false;     \n    },\n\n    parity = () => {\n        if(hasConditions.current && conditions.length === 0) {\n            return false;\n        }\n        if(hasMeds.current && meds.length === 0) {\n            return false;\n        }\n        if(hasContacts.current && contacts.length === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    useEffect(() => {\n        setNameInNavbar()\n    }, [generalInfo])\n\n    const setNameInNavbar = () => {\n        let { firstName, nickname } = generalInfo,\n        name = nickname ? nickname : firstName;\n\n        setContext({ patientId: patient, name })\n    },\n\n    onGenInfoInputChange = e => {\n        const { name, value } = e.target;\n        setGeneralInfo({ ...generalInfo, [name]: value })\n    }, \n\n    onHealthInfoInputChange = e => {\n        const { name, value } = e.target;\n        setHealthInfo({ ...healthInfo, [name]: value })\n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n    \n    onConditInputChange = async e => {\n      const { value } = e.target,\n       items = await getConditionNames(value);\n\n      let suggestions = [];\n       \n      if (value.length > 0) {\n          const regex = new RegExp(`^${value}`, 'i');\n          suggestions = items.sort().filter( x => regex.test(x));\n        } \n        setConditSuggestions({ suggestions, text: value })\n     }\n\n     //I'm using this effect, along with the query state to create a 1/2 second delay after typing finishes before API and other code is executed to resolve performance issues.  \n     useEffect(() => {\n        const timeOutId = setTimeout(() => setMedInput(query), 500);\n        return () => clearTimeout(timeOutId);\n      }, [query]);\n    \n    const onMedInputChange = async e => {\n            const { name, value } = e.target; \n            setQuery({ ...query, [name]: value })\n            \n        //only run this code when medication changes. ignore dosage.\n        if (name === 'medication') {\n        try {           \n        const items = await getMedNames(value)\n        let suggestions = [];\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = items.sort().filter( x => regex.test(x)).slice(0, 8)\n            } \n            setMedSuggestions({ suggestions, text: value })\n        } catch (err) {return}\n        } \n    },\n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = contacts,\n        edit = contacts[index];\n        \n        forceUpdate();\n        \n        for (let key of Object.keys(edit)) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    }, \n     \n     onConditDescChange = index => e => {\n        const { value } = e.target,\n          clone = conditions;\n\n        forceUpdate();\n\n         const newDescription = {\n            name: conditions[index].name,\n            edit: conditions[index].edit,\n            description: value\n        }\n        clone.splice(index, 1, newDescription)\n        setConditions(clone)\n    }, \n\n    toggleDescriptionEdit = index => {\n        const arr = [];\n\n        conditions.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setConditions(arr)\n    },\n\n    toggleContactEdit = index => {\n        const arr = [];\n\n        contacts.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setContacts(arr)\n    },\n\n    addCondition = async e => {\n        e.preventDefault();\n        e.target.reset();\n        \n        let { text } = conditSuggestions;\n        setConditSuggestions([]);\n\n        if (!text) return;\n        \n        const [ search ]  = text.split('-'),\n            { data } = await API.fetchCondition(search),\n    \n        description = (data[0] && data[0].shortdef) ? data[0].shortdef.join('\\n') : '',\n\n                newCondition = { \n                    name: capitalizeWord(text), \n                    description, \n                    edit: false, \n                    createdAt: Date.now()\n                }\n        hasConditions.current = true;\n        setConditions([...conditions, newCondition])\n    },\n\n    addMeds = e => {\n        e.preventDefault();\n        e.target.reset();\n\n        let { text } = medSuggestions;\n        if (!text) return\n        \n        try {\n           text = text.split(' ')\n\n            const newMed = {\n                medication: capitalizeWord(text[0]),\n                dosage: medInput.dosage,\n                edit : false,\n                createdAt: Date.now()\n            }\n        hasMeds.current = true;\n        setMeds([...meds, newMed])\n        setDoses('')\n        setQuery('')\n        setMedSuggestions([])\n        } catch(err) {return}\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n        \n        hasContacts.current = true;\n        setContacts([...contacts, newContact])\n    },\n\n    removeCondition = index => {\n        const clone = conditions;\n\n        clone.splice(index, 1)\n\n        hasConditions.current = clone.length === 0 ? false : true\n        setConditions([...clone])\n    },\n\n    removeMed = index => {\n        const clone = meds;\n        \n        clone.splice(index, 1)\n\n        hasMeds.current = clone.length === 0 ? false : true\n        setMeds([...clone])\n    },\n\n    removeContact = index => {\n        const clone = contacts;\n\n        clone.splice(index, 1)\n\n        hasContacts.current = clone.length === 0 ? false : true\n        setContacts([...clone])\n    },\n\n/*\n    Features Management\n*/ \n    capitalizeWord = word => word.replace(/\\b[a-z]/g, char => char.toUpperCase()),\n\n    getConditionNames = async search => {\n        const { data } = await API.getConditionNames(search);\n        return  data[3].map( x => x[0]);\n    },\n\n     getMedNames = async search => {\n        const { data }  = await API.getMedNames(search);\n        return !data.displayTermsList ? \"??\" : data.displayTermsList.term;  \n    },\n\n    selectSuggestedCondit = async value => {\n        setConditSuggestions({ suggestions: [], text: value })\n\n        //auto add condition when selected autocomplete value is clicked.    \n        if (!value) return;\n        \n        const [ search ]  = value.split('-'),\n            { data } = await API.fetchCondition(search),\n    \n        description = (data[0] && data[0].shortdef) ? data[0].shortdef.join('\\n') : '',\n\n                newCondition = { \n                    name: capitalizeWord(value), \n                    description, \n                    edit: false, \n                    createdAt: Date.now()\n                }\n        setConditions([...conditions, newCondition])\n        setConditSuggestions({text: ''})\n    },\n\n    renderConditSuggestions = () => {\n        const { suggestions } = conditSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedCondit(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    selectSuggestedMed = async value => {\n        setMedSuggestions({ suggestions: [], text: value})\n        \n        //populate dosage choices with suggestions when autocomplete option is clicked\n        if (!value) return;\n        try {\n            const  { data } = await API.fetchMeds(value),\n              doses = data.drugGroup.conceptGroup[1].conceptProperties.map(x => x.synonym).filter(x => x !== '')\n           \n            setDoses(doses)\n        } catch(err) {return}\n    },\n\n    renderMedSuggestions = () => {\n        const { suggestions } = medSuggestions;\n        \n        if (!suggestions || suggestions.length === 0) {\n            return;\n        }\n        return (\n            <ul>\n                {suggestions.map( (suggestion, i) => <li onClick={() => selectSuggestedMed(suggestion)} key={i}>{suggestion}</li>)}\n            </ul>\n        )\n    },\n\n    //populate dosage choices when finger button is clicked\n    addDoses = async e => {\n        e.preventDefault();\n\n        const { text } = medSuggestions;\n        \n        if (!text) return;\n        try {\n            const  { data } = await API.fetchMeds(text),\n              doses = data.drugGroup.conceptGroup[1].conceptProperties.map(x => x.synonym).filter(x => x !== '')\n            \n            setDoses(doses)   \n        } catch(err) {return}\n    }\n\n\n    return (\n        <Container>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <GeneralInfo\n                        toggleState={() => setGenState(!editGenState)}\n                        editState={editGenState}\n                        data={generalInfo}\n                        target={onGenInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <HealthCard\n                        toggleState={() => setHealthState(!editHealthState)}\n                        editState={editHealthState}\n                        data={healthInfo}\n                        target={onHealthInfoInputChange}\n                        formSubmit={updateDB}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Conditions\n                        toggleState={() => setConditState(!editConditState)}\n                        editState={editConditState} \n                        toggleDescState={() => setDescEditState(!descEditState)}\n                        editDescState={descEditState} \n                        editState={editConditState}\n                        toggleDescState={toggleDescriptionEdit}\n                        remove={removeCondition}\n                        areaTarget={onConditDescChange}\n                        data={conditions}\n                        target={onConditInputChange}\n                        renderSuggestions={renderConditSuggestions}\n                        text={conditSuggestions.text}\n                        formSubmit={addCondition}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Medications\n                        toggleState={() => setMedsState(!editMedsState)}\n                        editState={editMedsState}\n                        data={meds}\n                        target={onMedInputChange}\n                        renderSuggestions={renderMedSuggestions}\n                        text={medSuggestions.text}\n                        otherDosage={medInput.dosage}\n                        remove={removeMed}\n                        addDoses={addDoses}\n                        doseChoices={doses}\n                        formSubmit={addMeds}\n                        name={name}\n                      />\n                </Col>\n            </Row>\n            <Row classes={'my-5'}>\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <Contacts\n                        toggleNew={() => setAddContact(!addContact)}\n                        toggleState={toggleContactEdit}\n                        newContact={addContact}\n                        data={contacts}\n                        target={onContactChange}\n                        remove={removeContact}\n                        newTarget={newContactInputChange}\n                        formSubmit={addNewContact}\n                        name={name}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Container, Row, Col } from '../../components/Grid';\nimport { Contacts as ForwardThis } from '../../components/Contacts';\nimport { useForceUpdate } from '../../utils/CustomHooks';\nimport PatientContext from '../../utils/PatientContext';\nimport API from '../../utils/API';\n\n\nexport default function Contacts({ location }) {\n\n     const [ contacts, setContacts ] = useState([]),\n        [ newContact, setNewContact ] = useState({}),\n        [ addContact, setAddContact ] = useState(false),\n        [ generalInfo, setGeneralInfo ] = useState({}),\n        [ healthInfo, setHealthInfo ] = useState({}),\n        [ conditions, setConditions ] = useState([]),\n        [ meds, setMeds ] = useState([]),\n\n        hasContacts = useRef(),  \n        forceUpdate = useForceUpdate(),\n        isInitialMount = useRef(true);\n\n        let { patientId, name } = useContext(PatientContext);\n        patientId = patientId ? patientId : location.state.patientId;\n\n\n    //Use this effect to only load patient on initial mount. And update db only on subsequent mounts. \n    useEffect(() => {   \n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n            getPatient()\n        } else {\n            updateDB()\n         }\n    }, [contacts]);\n\n    const getPatient = async() => {\n        if (!patientId) return\n       \n        const { data } = await API.fetchPatient(patientId)\n            \n        setGeneralInfo(data.patientData)\n        setHealthInfo(data.healthData)\n        setConditions(data.healthConditions)\n        setMeds(data.medications)\n        setContacts(data.contacts)\n        hasContacts.current = setParity(data)\n    },\n\n    updateDB = () => { \n        if (parity()) {\n        const data = {generalInfo, healthInfo, conditions, meds, contacts}\n\n        API.updateEHR(patientId, data)\n            .catch(err => console.log(err))         \n        }\n    },\n\n    newContactInputChange = e => {\n        const { name, value } = e.target;\n        setNewContact({...newContact, [name]: value})\n    }, \n\n    setParity = data => (data && data.contacts.length > 0) ? true : false,\n\n    parity = () => (hasContacts.current && contacts.length === 0) ? false : true,\n\n    onContactChange = index => e => {\n        const { name, value } = e.target,\n        clone = contacts,\n        edit = contacts[index];\n        \n        forceUpdate();\n\n        for (let key of Object.keys(edit)) {\n\n            if (key === name) {\n                edit[key] = value;\n            } else if (!edit.hasOwnProperty(name)) {\n                edit[name] = value;\n            }\n        }\n        clone.splice(index, 1, edit)\n        setContacts(clone)\n    },\n\n    toggleContactEdit = index => {\n        const arr = [];\n\n        contacts.forEach( (item, i) => {\n            \n            item.edit = i === index ? !item.edit : false;\n            arr.push(item)\n        })\n        setContacts(arr)\n    },\n\n    addNewContact = e => {\n        e.preventDefault();\n        setAddContact(false)\n\n        const list = contacts.concat(newContact);\n        \n        setContacts(list)\n    },\n\n    removeContact = index => {\n        const clone = contacts;\n\n        clone.splice(index, 1)\n        setContacts([...clone])\n    };\n\n    return (\n        <Container>\n            <Row classes=\"my-5\">\n                <Col size={'md-8'} classes={'offset-md-2'}>\n                    <ForwardThis\n                    toggleNew={() => setAddContact(!addContact)}\n                    toggleState={toggleContactEdit}\n                    newContact={addContact}\n                    data={contacts}\n                    target={onContactChange}\n                    remove={removeContact}\n                    newTarget={newContactInputChange}\n                    formSubmit={addNewContact}\n                    name={name}\n                    />\n                </Col>\n             </Row>\n        </Container>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport PatientContext from '../../utils/PatientContext';\nimport { Button } from '../Forms';\nimport { Collapse } from '../Grid';\nimport Auth from '../../Auth';\n\nexport default function navBar() {\n\n    const [navLinks, showNavLinks] = useState(false),\n    history = useHistory(),\n    { pathname } = useLocation(),\n    { patientId, name } = useContext(PatientContext),\n        \n\n    // hide or show links when screen width is small\n     toggleNav = () => showNavLinks(navLinks = !navLinks),  \n\n     logout = () => Auth.logout(() => {history.push(\"/\")}),\n    \n     getButtons = () => {\n        if(Auth.isAuthenticated()) {\n            return (\n                <Button className={'btn btn-outline-primary m-2'} type='button'\n                    onClick={logout} >\n                    Log Out\n                </Button>\n        )\n        } else {\n            return (\n                <div>\n                    <Link to='/signin' >\n                                <Button className={'btn btn-outline-primary m-2'} type='button'>\n                                    Log In\n                                </Button>\n                            </Link>\n                    <Link to='/signup' >\n                        <Button className={'btn btn-outline-primary m-2'} type='button'>\n                            Sign Up\n                            </Button>\n                    </Link>\n                </div>\n                )\n            }\n     }\n  \n\n    return (\n        <nav className={'navbar navbar-expand-lg navbar-light bg-light'}>\n            <Link to='/' className={'navbar-brand'}><em>my</em>EHR</Link>\n            <button onClick={toggleNav} className={'navbar-toggler'} type=\"button\" data-toggle=\"collapse\" data-target=\"#target-collapse\" >\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <Collapse navState={navLinks} id={'target-collapse'}>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className={pathname === \"/\" ? \"nav-item active\" : \"nav-item\"}>\n                    <Link to=\"/\" className={'nav-link'}>\n                        Home\n                    </Link>\n                </li>\n                <li className={pathname === \"/patients\" ? \"nav-item active\" : \"nav-item\"}\n                    style={Auth.isAuthenticated() ? {display: 'block'} : {display: 'none'}} >\n                    <Link to=\"/patients\" className={'nav-link'}>\n                        Saved health records\n                    </Link>\n                </li>\n                <li className={pathname === \"/ehr\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}} >\n\n                    <Link to={{pathname:\"/ehr\", state: { patientId, name }}} className={'nav-link'} >\n                       {name ? `${name}'s` : ''} EHR\n                    </Link>    \n                </li>\n                <li className={pathname === \"/contacts\" ? \"nav-item active\" : \"nav-item\"}\n                    style={pathname === \"/ehr\" || pathname === \"/contacts\" ? {display: 'block'} : {display: 'none'}}  >\n\n                    <Link to={{pathname:\"/contacts\", state: { patientId, name }}} className={'nav-link'} >\n                    {name ? `${name}'s` : ''} Contacts\n                    </Link>    \n                </li>\n              </ul>\n              \n                { getButtons() }\n\n            </Collapse>\n        </nav>\n    )\n}\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Auth from './Auth'\n\nexport default function ProtectedRoute({ component: Component, ...rest}) {\n    return (\n        <Route \n            {...rest}  \n                render={props => { \n                if(Auth.isAuthenticated()) {\n                    \n                    return <Component {...rest} {...props} />\n                } else{ \n                    return <Redirect to={\n                        {\n                            pathname: '/',\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n        }  }\n       />\n    )\n}\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Landing from \"./pages/Landing\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport Patients from \"./pages/Patients\";\nimport EHR from \"./pages/EHR\";\nimport Contacts from './pages/Contacts';\nimport NavBar from './components/Navbar';\nimport ProtectedRoute from './ProtectedRoute';\nimport PatientContext from './utils/PatientContext';\nimport './assets/css/bootstrap.min.css';\nimport \"./App.css\";\n\n\nexport default function App() {\n  \n  const [ patient, setPatient ] = useState({}),\n    { Provider } = PatientContext,\n\n  setPatientContext = patient => setPatient(patient);\n\n  return (\n    <Router>\n      <Provider value={patient} >\n        <Route path=\"/\"><NavBar /> </Route>\n        <Route exact path=\"/\"> <Landing /> </Route>\n        <Route exact path=\"/signin\"> <SignIn /> </Route>\n        <Route exact path=\"/signup\"> <SignUp /> </Route>\n        <ProtectedRoute exact path=\"/patients\" \n        component={Patients} \n        setContext={setPatientContext}  \n        /> \n        <ProtectedRoute exact path=\"/ehr\" \n        component={EHR} \n        setContext={setPatientContext}\n        />\n        <ProtectedRoute exact path=\"/contacts\" component={Contacts} />\n      </Provider>\n    </Router>\n  )\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}